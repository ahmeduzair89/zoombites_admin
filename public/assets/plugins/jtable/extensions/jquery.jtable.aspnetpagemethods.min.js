(function(d) {
    d.extend(!0, d.hik.jtable.prototype, {
        _performAjaxCall: function(b, c, a, e, f) {
            this._ajax({
                url: b,
                data: c,
                async: a,
                success: e,
                error: f
            })
        },
        _ajax: function(b) {
            var c = this,
                a = d.extend({}, this.options.ajaxSettings, b);
            null == a.data || void 0 == a.data ? a.data = {} : "string" == typeof a.data && (a.data = c._convertQueryStringToObject(a.data));
            var e = a.url.indexOf("?"); - 1 < e && d.extend(a.data, c._convertQueryStringToObject(a.url.substring(e + 1)));
            a.data = JSON.stringify(a.data);
            a.contentType = "application/json; charset=utf-8";
            a.success = function(a) {
                a = c._normalizeJSONReturnData(a);
                b.success && b.success(a)
            };
            a.error = function() {
                b.error && b.error()
            };
            a.complete = function() {
                b.complete && b.complete()
            };
            d.ajax(a)
        },
        _submitFormUsingAjax: function(b, c, a, e) {
            var f = this;
            c = {
                record: f._convertQueryStringToObject(c)
            };
            var g = b.indexOf("?"); - 1 < g && d.extend(c, f._convertQueryStringToObject(b.substring(g + 1)));
            c = JSON.stringify(c);
            d.ajax({
                url: b,
                type: "POST",
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                data: c,
                success: function(b) {
                    b = f._normalizeJSONReturnData(b);
                    a(b)
                },
                error: function() {
                    e()
                }
            })
        },
        _convertQueryStringToObject: function(b) {
            for (var c = {}, a, e = /\+/g, d = /([^&=]+)=?([^&]*)/g; a = d.exec(b);) c[decodeURIComponent(a[1].replace(e, " "))] = decodeURIComponent(a[2].replace(e, " "));
            return c
        },
        _normalizeJSONReturnData: function(b) {
            return b.hasOwnProperty("d") ? b.d : b
        }
    })
})(jQuery);